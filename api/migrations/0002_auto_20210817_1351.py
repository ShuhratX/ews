# Generated by Django 3.1.2 on 2021-08-17 08:51

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_uz', models.CharField(max_length=50)),
                ('name_ru', models.CharField(max_length=50)),
                ('training_center', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kategoriya',
                'verbose_name_plural': 'Kategoriyalar',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('money', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('percent', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), null=True, size=8)),
                ('start_date', models.DateField()),
                ('days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), null=True, size=8)),
                ('time', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), null=True, size=8)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('description', models.TextField()),
                ('dayf', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), size=8), blank=True, null=True, size=8)),
                ('timef', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), null=True, size=8)),
                ('category', models.ManyToManyField(blank=True, null=True, to='api.Category')),
            ],
            options={
                'verbose_name': 'Guruh',
                'verbose_name_plural': 'Guruhlar',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=15)),
                ('text', models.TextField()),
                ('photo', models.ImageField(upload_to='')),
                ('training_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "O'qituvchi",
                'verbose_name_plural': "O'qituvchilar",
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('training_center', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='subjects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fan',
                'verbose_name_plural': 'Fanlar',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=100)),
                ('home_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
                ('training_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "O'quvchi",
                'verbose_name_plural': "O'quvchilar",
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('added_at', models.TimeField(auto_now_add=True)),
                ('updated_at', models.TimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.students')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.teacher')),
            ],
            options={
                'verbose_name': ('Post',),
                'verbose_name_plural': 'Postlar',
            },
        ),
        migrations.CreateModel(
            name='PayMe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.FloatField()),
                ('unpaid', models.FloatField()),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.group')),
                ('students', models.ManyToManyField(to='api.Students')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='subject',
            field=models.ManyToManyField(blank=True, null=True, to='api.Subjects'),
        ),
        migrations.AddField(
            model_name='group',
            name='teacher',
            field=models.ManyToManyField(blank=True, null=True, to='api.Teacher'),
        ),
        migrations.AddField(
            model_name='group',
            name='training_center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('file', models.FileField(upload_to='')),
                ('image', models.ImageField(upload_to='')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.group')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.students')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateTimeField()),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='api.group')),
                ('students', models.ManyToManyField(to='api.Students')),
                ('training_center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Davomat',
                'verbose_name_plural': 'Davomat',
            },
        ),
    ]
